Challenge 1:

```{r}
u<- "stately, plump buck milligan came from the stirhead, bearing a bowl of lather on which a mirror and a razor lay crossed" 
u
```

Use strsplit to separate the words.

```{r}
strsplit(u," ")

```

```{r}
np<-gsub("[[:punct:]]","",u) 
np
```

After Googling I was able to find this set that worked, making sure to have a space between the " "

```{r}
word<-unlist(strsplit(np," ")) # what does "unlist" do?
word
```

```{r}
thirds<- word[seq(3, length(word),by =3)] # i like this way of doing it - i did [seq(from-1,to=22,by=3)] but you solved it more elegantly
thirds
```

Challenge 2:

```{r}
m<- matrix(data=1:80,nrow=8,ncol=10,byrow=FALSE)
m
```

Comma needs to go before c because you are selecting all rows so you are leaving the row index empty!

```{r}
x<-m[,c(2,3,6)] # again, a more efficient/elegant way of solving this than I had! I didn't think of putting c() within m[]
x
```

Here you put the comma AFTER the c and numbers because you are selecting for all columns, so you leave the column index empty

```{r}
x<-m[c(6,8),] # I believe the challenge is asking for the 6th *to* 8th row, so maybe m[6:8, ] would work better?
x
```

I felt this was confusing in the instructions, so i am not sure if this is right

```{r}
# I had the same code, except I didn't have the c() commands - not sure if they're necessary here
x<-m[c(2:6),c(2:9)]
x
```

Challenge 3:

```{r}
n<- 400:1
a<-array(n,dim=c(5,5,4,4))
a
```

```{r}
a[1,1,1,2]
a[2,3,2,]
a[1:5,1:5,3,3]
```

Challenge 4

I am going to work backwards making a vector of the different families

```{r}
platyrrhini<-c("cebidae","atelidae","pitheciidae")
catarrhini<-c("cercopithecidae","hyobatidae","hominidae")
lorisoidea<-c("lorisidae","galagidae")
lemuroidea<-c("cheirogaleidae","lepilemuridae","indriidae","lemuridae","daubentoniidae")
tarsiidae<-c("tarsiidae")

```

Now I am going to put them in lists

```{r}
anthropoidea<-list(platyrrhini,catarrhini)
names(anthropoidea)<-list("platyrrhini","cararrhini")
anthropoidea
strepsirhini<-list(lorisoidea,lemuroidea)
names(strepsirhini)<-list("lorisoidea","lemuroidea")
strepsirhini
tarsioidea<-list(tarsiidae)
names(tarsioidea)<-list("tarsiidae")
tarsioidea

```

```{r}
haplorhini<- list(anthropoidea,tarsioidea)
names(haplorhini)<-list("anthropoidea","tarsioidea")
haplorhini
```

This is looking funky with the names?
*I had this issue too! did you ever find a fix?*
```{r}
primates<-list(haplorhini,strepsirhini)
names(primates)<-list("haplorhini","strepsirhini")
primates
```

CHALLENGE 5

Create a matrix

```{r}
n<- c(3,0,1,23,1,2,33,1,1,42,0,1,41,0,2)
# it's interesting that you assigned these numbers to the variable "n" first, instead of putting it straight into the matrix assignment. any particular reason?
m3<-matrix(n,nrow=5,ncol=3,byrow=TRUE)
m3
```

Use as.data.frame to make data drame

```{r}
df<-as.data.frame(m3) # i used the command data.frame here, not as.data.frame - i wonder what the difference is?
df
```

keeping row empty so it only changes column 2, using as.logical

```{r}
df[,2]<-as.logical(df[,2])
df
```

Keeping row empty so it only changes column 3, using as.factor

```{r}
df[,3]<-as.factor(df[,3])
df
```

```{r}
str(df)

```
*I think the annotations might be clearer if you list what the challenges are within your markdown document - it could also make it easier to reference it later*
